# 重新设定prefix
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# 终端颜色配置
set -g default-terminal "screen-256color"

set -sg escape-time 1
set -gw xterm-keys on

# 窗口/面板 下标从1开始
set -g base-index 1
setw -g pane-base-index 1

# 重新加载配置文件
bind r source-file ~/.tmux.conf \; display "reloaded!"

# 清空历史
bind K send-keys 'C-l' \; clear-history \; display "cleared!"

# 窗口分割, 进入与当前面板相同目录
unbind '%'
unbind '#'
unbind '"'
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# 面板间移动
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# 面板拉伸 Shift+方向键
bind -n S-left  resize-pane -L
bind -n S-up    resize-pane -U
bind -n S-down  resize-pane -D
bind -n S-right resize-pane -R

# 不使用鼠标 tmux2.1
setw -g mouse off

# 窗口通知
setw -g monitor-activity on
set -g visual-activity on

# set the status line's colors
set -g status-fg white
set -g status-bg black

# 居中显示窗口列表
set -g status-justify centre

# 窗口列表颜色
setw -g window-status-fg black
setw -g window-status-bg cyan
setw -g window-status-attr dim

# 当前活动窗口颜色
setw -g window-status-current-fg black
setw -g window-status-current-bg green
setw -g window-status-current-attr bright

# 面板边框颜色
set -g pane-border-fg default
set -g pane-border-bg default

# 当前活动面板边框颜色
set -g pane-active-border-fg 'colour58'
set -g pane-active-border-bg default

# 命令行/提示栏
set -g message-fg black
set -g message-bg green
set -g message-attr bright

# 状态栏左侧
# set -g status-utf8 on
set -g status-left-length 40
set -g status-left "#[fg=green]session:#S #[fg=yellow]window:#I #[fg=cyan]pane:#P"

# 状态栏右侧: 2016/09/17 12:13:45 星期六
set -g status-right "#[fg=blue,bold]%x %T %A#[bg=blue]"

# 状态栏每秒刷新
set -g status-interval 1

# vi风格内容选择/复制
setw -g mode-keys vi
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy C-v rectangle-toggle    # 矩形选择开关
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line

# 最大化/恢复窗口
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# 日志输出
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# Duplicate SSH session
# bind S neww "$(ps -ao pid,tty,args | sort | awk '$2 ~ /#{pane_pid}/{VAR=$2} $2 ~ VAR && $3 ~ /ssh/{$1=\"\"; $2=\"\"; print}')"
